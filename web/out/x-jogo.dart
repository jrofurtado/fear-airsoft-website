// Auto-generated from x-jogo.html.
// DO NOT EDIT.

library x_jogo;

import 'dart:html' as autogenerated;
import 'dart:svg' as autogenerated_svg;
import 'package:web_ui/web_ui.dart' as autogenerated;
import 'package:web_ui/web_ui.dart';
import 'package:js/js.dart' as js;
import 'package:google_maps/js_wrap.dart' as jsw;
import 'package:google_maps/google_maps.dart';
import 'package:google_calendar_v3_api/calendar_v3_api_browser.dart' as calendarclient;
import 'dart:html';
import 'dart:async';
import '../model.dart';
import 'x-participante.dart';



class Jogo extends WebComponent {
  /** Autogenerated from the template. */

  /** CSS class constants. */
  static Map<String, String> _css = {};

  /**
   * Shadow root for this component. We use 'var' to allow simulating shadow DOM
   * on browsers that don't support this feature.
   */
  var _root;
  static final __html1 = new autogenerated.BRElement(), __html10 = new autogenerated.Element.tag('template'), __html11 = new autogenerated.Element.tag('x-participante'), __html12 = new autogenerated.Element.tag('template'), __html13 = new autogenerated.Element.tag('x-participante'), __html14 = new autogenerated.Element.tag('template'), __html15 = new autogenerated.Element.tag('x-participante'), __html2 = new autogenerated.BRElement(), __html3 = new autogenerated.BRElement(), __html4 = new autogenerated.BRElement(), __html5 = new autogenerated.Element.html('<span class="copyrightReference">Powered by <a href="http://www.worldweatheronline.com/" title="Free local weather content provider" target="_blank">World Weather Online</a></span>'), __html6 = new autogenerated.ImageElement(), __html7 = new autogenerated.Element.html('<span class="weatherSmallText "></span>'), __html8 = new autogenerated.Element.html('<span class="weatherSmallText "></span>'), __html9 = new autogenerated.Element.html('<span class="weatherSmallText "></span>'), __shadowTemplate = new autogenerated.DocumentFragment.html('''
        <div class="proximoJogo">
          <div id="map_canvas" class="mapSmall"></div>
          <div class="weatherSmall">
            <template id="__e-100"></template>
          </div>
          <div class="participantes" id="__e-104"></div>
          <div class="participantes" id="__e-108"></div>
          <div class="participantes" id="__e-112"></div>
        </div>
      ''');
  autogenerated.DivElement __e104, __e108, __e112, __map_canvas;
  autogenerated.Element __e100, __e103, __e107, __e111;
  autogenerated.Template __t;

  Jogo.forElement(e) : super.forElement(e);

  void created_autogenerated() {
    _root = createShadowRoot();
    __t = new autogenerated.Template(_root);
    if (_root is autogenerated.ShadowRoot) _root.applyAuthorStyles = true;
    _root.nodes.add(__shadowTemplate.clone(true));
    __map_canvas = _root.query('#map_canvas');
    __e100 = _root.query('#__e-100');
    __t.conditional(__e100, () => model.tempo.length>0, (__t) {
      var __e92, __e95, __e97, __e99;
      __e92 = __html6.clone(true);
      __t.oneWayBind(() => model.tempo[0]['weatherIconUrl'][0]['value'], (e) { __e92.src = e; }, false, true);
      __e95 = __html7.clone(true);
      var __binding93 = __t.contentBind(() => model.tempo[0]['tempMinC'], false);
      var __binding94 = __t.contentBind(() => model.tempo[0]['tempMaxC'], false);
      __e95.nodes.addAll([__binding93,
          new autogenerated.Text('º C - '),
          __binding94,
          new autogenerated.Text('º C')]);
      __t.bindClass(__e95, () => temperaturaClass, false);
      __e97 = __html8.clone(true);
      var __binding96 = __t.contentBind(() => model.tempo[0]['precipMM'], false);
      __e97.nodes.addAll([new autogenerated.Text('Precipitação: '),
          __binding96,
          new autogenerated.Text(' mm')]);
      __t.bindClass(__e97, () => precipitacaoClass, false);
      __e99 = __html9.clone(true);
      var __binding98 = __t.contentBind(() => model.tempo[0]['windspeedKmph'], false);
      __e99.nodes.addAll([new autogenerated.Text('Vento (Km/h): '),
          __binding98,
          new autogenerated.Text(' Km/h')]);
      __t.bindClass(__e99, () => ventoClass, false);
    __t.addAll([new autogenerated.Text('\n              '),
        __e92,
        new autogenerated.Text('\n              '),
        __html1.clone(true),
        new autogenerated.Text('\n              '),
        __e95,
        new autogenerated.Text('\n              '),
        __html2.clone(true),
        new autogenerated.Text('\n              '),
        __e97,
        new autogenerated.Text('\n              '),
        __html3.clone(true),
        new autogenerated.Text('\n              '),
        __e99,
        new autogenerated.Text('\n              '),
        __html4.clone(true),
        new autogenerated.Text('\n              '),
        __html5.clone(true),
        new autogenerated.Text('        \n            ')]);
    });

    __e104 = _root.query('#__e-104');
    var __binding101 = __t.contentBind(() => participantesSim.length, false);
    __e103 = __html10.clone(true);
    __t.loop(__e103, () => participantesSim, (participante, __t) {
      var __e102;
      __e102 = __html11.clone(true);
      __t.oneWayBind(() => participante, (e) { __e102.xtag.participante = e; }, false, false);
      new Participante.forElement(__e102);
      __t.component(__e102);
    __t.addAll([new autogenerated.Text('\n              '),
        __e102,
        new autogenerated.Text('\n            ')]);
    });
    __e104.nodes.addAll([new autogenerated.Text('\n            Presentes: '),
        __binding101,
        new autogenerated.Text('\n            '),
        __e103,
        new autogenerated.Text('  \n          ')]);
    __e108 = _root.query('#__e-108');
    var __binding105 = __t.contentBind(() => participantesNao.length, false);
    __e107 = __html12.clone(true);
    __t.loop(__e107, () => participantesNao, (participante, __t) {
      var __e106;
      __e106 = __html13.clone(true);
      __t.oneWayBind(() => participante, (e) { __e106.xtag.participante = e; }, false, false);
      new Participante.forElement(__e106);
      __t.component(__e106);
    __t.addAll([new autogenerated.Text('\n              '),
        __e106,
        new autogenerated.Text('\n            ')]);
    });
    __e108.nodes.addAll([new autogenerated.Text('\n            Ausentes: '),
        __binding105,
        new autogenerated.Text('\n            '),
        __e107,
        new autogenerated.Text('  \n          ')]);
    __e112 = _root.query('#__e-112');
    var __binding109 = __t.contentBind(() => participantesTalvez.length, false);
    __e111 = __html14.clone(true);
    __t.loop(__e111, () => participantesTalvez, (participante, __t) {
      var __e110;
      __e110 = __html15.clone(true);
      __t.oneWayBind(() => participante, (e) { __e110.xtag.participante = e; }, false, false);
      new Participante.forElement(__e110);
      __t.component(__e110);
    __t.addAll([new autogenerated.Text('\n              '),
        __e110,
        new autogenerated.Text('\n            ')]);
    });
    __e112.nodes.addAll([new autogenerated.Text('\n            Talvez: '),
        __binding109,
        new autogenerated.Text('\n            '),
        __e111,
        new autogenerated.Text('\n          ')]);
    __t.create();
  }

  void inserted_autogenerated() {
    __t.insert();
  }

  void removed_autogenerated() {
    __t.remove();
    __t = __map_canvas = __e100 = __e104 = __e103 = __e108 = __e107 = __e112 = __e111 = null;
  }

  void composeChildren() {
    super.composeChildren();
    if (_root is! autogenerated.ShadowRoot) _root = this;
  }

  /** Original code from the component. */

  String get temperaturaClass{
    if(double.parse(model.tempo[0]["tempMinC"])<5) {
      return "red";
    }
    if(double.parse(model.tempo[0]["tempMaxC"])>=35) {
      return "red";
    }
    if(double.parse(model.tempo[0]["tempMinC"])<10) {
      return "yellow";
    }
    if(double.parse(model.tempo[0]["tempMaxC"])>=30) {
      return "yellow";
    }
    return "";
  }
  String get precipitacaoClass{
    if(double.parse(model.tempo[0]["precipMM"])>=4) { //Chuva intensa (http://wiki.sandaysoft.com/a/Rain_measurement#Standard_.28graduated_cylinder.29Rain_Gauge)
        return "red";
    }
    if(double.parse(model.tempo[0]["precipMM"])>=1) { //Chuva moderada
      return "yellow";
    }
    return "";
  }
  String get ventoClass{
    if(double.parse(model.tempo[0]["windspeedKmph"])>=45) { //Vento intenso (http://library.thinkquest.org/C003603/english/hurricanes/hurricanewind.shtml)
        return "red";
    }
    if(double.parse(model.tempo[0]["windspeedKmph"])>=25) { //Vento moderado
      return "yellow";
    }
    return "";
  }
  List<calendarclient.EventAttendee> get participantesSim{
    var res = model.participantes.where((participante) => (participante.responseStatus=="accepted"));
    return res.toList();
  }
  List<calendarclient.EventAttendee> get participantesNao{
    var res = model.participantes.where((participante) => (participante.responseStatus=="declined"));
    return res.toList();
  }
  List<calendarclient.EventAttendee> get participantesTalvez{
    var res = model.participantes.where((participante) => (participante.responseStatus=="tentative"));
    return res.toList();
  }

  void inserted() {
    if(model.jogo.length>0){
      js.scoped(() {
        final mapOptions = new MapOptions()
          ..zoom = 12
          ..center = new LatLng(model.jogo[0]['campo']['lat'],model.jogo[0]['campo']['lng'])
          ..mapTypeId = MapTypeId.ROADMAP;
        var canvas= query("#map_canvas");
        final map = new GMap(canvas, mapOptions);
        final estacionamentoMarker = new Marker(new MarkerOptions()
          ..title = "Estacionamento"
          ..zIndex = 1
          ..position = new LatLng(model.jogo[0]['campo']['estacionamentoLat'],model.jogo[0]['campo']['estacionamentoLng'])
          ..map = map
          ..icon = '../estacionamento.png');
        final flagMarker = new Marker(new MarkerOptions()
          ..title = "Campo"
          ..zIndex = 2
          ..position = new LatLng(model.jogo[0]['campo']['lat'],model.jogo[0]['campo']['lng'])
          ..map = map
          ..icon = '../flag.png');
      });
    }
  }
}
//@ sourceMappingURL=x-jogo.dart.map