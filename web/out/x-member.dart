// Auto-generated from x-member.html.
// DO NOT EDIT.

library x_member;

import 'dart:html' as autogenerated;
import 'dart:svg' as autogenerated_svg;
import 'package:web_ui/web_ui.dart' as autogenerated;
import 'package:web_ui/observe/observable.dart' as __observe;
import 'x-xp.dart';
import 'x-membro-emblema.dart';
import 'x-share.dart';
import 'package:web_ui/web_ui.dart';
import 'dart:html';
import 'model.dart';



class Member extends WebComponent {
  /** Autogenerated from the template. */

  /** CSS class constants. */
  static Map<String, String> _css = {};

  /**
   * Shadow root for this component. We use 'var' to allow simulating shadow DOM
   * on browsers that don't support this feature.
   */
  var _root;
  static final __html1 = new autogenerated.Element.html('<div class="membro-divEmblema">\n                <span is="x-membro-emblema" classe="membro-emblema"></span>\n                <img class="membro-estrela">\n              </div>'), __html2 = new autogenerated.Element.html('<div class="membro-divEmblema">\n                <span is="x-membro-emblema" classe="membro-emblema"></span>\n                <img class="membro-estrela">\n              </div>'), __html3 = new autogenerated.Element.html('<div class="membro-divEmblema">\n                <span is="x-membro-emblema" classe="membro-emblema"></span>\n                <img class="membro-estrela">\n              </div>'), __shadowTemplate = new autogenerated.DocumentFragment.html('''
        <div class="disabled">
        <div class="membro fadeInRightBig animated">
          <a class="closeWindow">X</a>
          <img class="membro-foto">
          <img class="membro-memberActive">
          <img class="membro-patente">
          <img class="membro-equipa">
          <div is="x-xp"></div>
          <div class="membro-nome"><p></p></div>
          <div class="membro-emblemas">
            <template></template>
          </div>
          <div class="membro-emblemas">
            <template></template>
          </div>
          <div class="membro-emblemas">
            <template></template>
          </div>
          <div class="divClearBoth"></div>
          <div is="x-share"></div>          
        </div>
        </div>
      ''');
  autogenerated.AnchorElement __e139;
  autogenerated.DivElement __e144, __e160;
  autogenerated.Element __e151, __e155, __e159;
  autogenerated.ImageElement __e140, __e141, __e142, __e143;
  autogenerated.ParagraphElement __e147;
  autogenerated.Template __t;

  void created_autogenerated() {
    _root = createShadowRoot();
    __t = new autogenerated.Template(_root);
    if (_root is autogenerated.ShadowRoot) _root.applyAuthorStyles = true;
    _root.nodes.add(__shadowTemplate.clone(true));
    __e139 = _root.nodes[1].nodes[1].nodes[1];
    __t.listen(__e139.onClick, ($event) { clickClose(); });
    __t.oneWayBind(() => NavLink.Membros.link, (e) { if (__e139.href != e) __e139.href = e; }, false, true);
    __e140 = _root.nodes[1].nodes[1].nodes[3];
    __t.bind(() => [Model.endpoint_imagens, membro['socio']],  (__e) { __e140.src = autogenerated.sanitizeUri('${__e.newValue[0]}/Fotos/384x418/${__e.newValue[1]}.jpg'); }, false);
    __e141 = _root.nodes[1].nodes[1].nodes[5];
    __t.bind(() => activoImg,  (__e) { __e141.src = autogenerated.sanitizeUri('../${__e.newValue}'); }, false);
    __t.oneWayBind(() => activoStr, (e) { if (__e141.title != e) __e141.title = e; }, false, false);
    __e142 = _root.nodes[1].nodes[1].nodes[7];
    __t.bind(() => membro['level'],  (__e) { __e142.src = autogenerated.sanitizeUri('../patentes/${__e.newValue}.png'); }, false);
    __t.oneWayBind(() => membro['rank'], (e) { if (__e142.title != e) __e142.title = e; }, false, false);
    __e143 = _root.nodes[1].nodes[1].nodes[9];
    __t.bind(() => [Model.endpoint_imagens, membro['teamName']],  (__e) { __e143.src = autogenerated.sanitizeUri('${__e.newValue[0]}/Equipas/150x150/${__e.newValue[1]}.png'); }, false);
    __t.oneWayBind(() => membro['teamName'], (e) { if (__e143.title != e) __e143.title = e; }, false, false);
    __e144 = _root.nodes[1].nodes[1].nodes[11];
    __t.oneWayBind(() => membro, (e) { if (__e144.xtag.membro != e) __e144.xtag.membro = e; }, false, false);
    __t.component(new Xp()..host = __e144);
    __e147 = _root.nodes[1].nodes[1].nodes[13].nodes[0];
    var __binding145 = __t.contentBind(() => membro['rank'], false);
    var __binding146 = __t.contentBind(() => membro['name'], false);
    __e147.nodes.addAll([__binding145,
        new autogenerated.Text(' '),
        __binding146]);
    __e151 = _root.nodes[1].nodes[1].nodes[15].nodes[1];
    __t.loop(__e151, () => membro['achievementsGun'], (achievement, __t) {
      var __e148, __e149, __e150;
      __e150 = __html1.clone(true);
      __e148 = __e150.nodes[1];
      __t.oneWayBind(() => achievement, (e) { if (__e148.xtag.achievement != e) __e148.xtag.achievement = e; }, false, false);
      __t.bind(() => null,  (__e) { __e148.xtag.classe = 'membro-emblema'; }, true);
      __t.oneWayBind(() => achievement['name'], (e) { if (__e148.xtag.titulo != e) __e148.xtag.titulo = e; }, false, false);
      __t.component(new MembroEmblema()..host = __e148);
      __e149 = __e150.nodes[3];
      __t.bind(() => achievement['stars'].toInt(),  (__e) { __e149.src = autogenerated.sanitizeUri('../estrelas/${__e.newValue}s.png'); }, false);
      __t.oneWayBind(() => achievement['name'], (e) { if (__e149.attributes['titulo'] != e) __e149.attributes['titulo'] = e; }, false, false);
    __t.addAll([new autogenerated.Text('\n              '),
        __e150,
        new autogenerated.Text('\n            ')]);
    });
    __e155 = _root.nodes[1].nodes[1].nodes[17].nodes[1];
    __t.loop(__e155, () => membro['achievementsRole'], (achievement, __t) {
      var __e152, __e153, __e154;
      __e154 = __html2.clone(true);
      __e152 = __e154.nodes[1];
      __t.oneWayBind(() => achievement, (e) { if (__e152.xtag.achievement != e) __e152.xtag.achievement = e; }, false, false);
      __t.bind(() => null,  (__e) { __e152.xtag.classe = 'membro-emblema'; }, true);
      __t.oneWayBind(() => achievement['name'], (e) { if (__e152.xtag.titulo != e) __e152.xtag.titulo = e; }, false, false);
      __t.component(new MembroEmblema()..host = __e152);
      __e153 = __e154.nodes[3];
      __t.bind(() => achievement['stars'].toInt(),  (__e) { __e153.src = autogenerated.sanitizeUri('../estrelas/${__e.newValue}s.png'); }, false);
      __t.oneWayBind(() => achievement['name'], (e) { if (__e153.attributes['titulo'] != e) __e153.attributes['titulo'] = e; }, false, false);
    __t.addAll([new autogenerated.Text('\n              '),
        __e154,
        new autogenerated.Text('\n            ')]);
    });
    __e159 = _root.nodes[1].nodes[1].nodes[19].nodes[1];
    __t.loop(__e159, () => membro['achievementsSpecial'], (achievement, __t) {
      var __e156, __e157, __e158;
      __e158 = __html3.clone(true);
      __e156 = __e158.nodes[1];
      __t.oneWayBind(() => achievement, (e) { if (__e156.xtag.achievement != e) __e156.xtag.achievement = e; }, false, false);
      __t.bind(() => null,  (__e) { __e156.xtag.classe = 'membro-emblema'; }, true);
      __t.oneWayBind(() => achievement['name'], (e) { if (__e156.xtag.titulo != e) __e156.xtag.titulo = e; }, false, false);
      __t.component(new MembroEmblema()..host = __e156);
      __e157 = __e158.nodes[3];
      __t.bind(() => achievement['stars'].toInt(),  (__e) { __e157.src = autogenerated.sanitizeUri('../estrelas/${__e.newValue}s.png'); }, false);
      __t.oneWayBind(() => achievement['name'], (e) { if (__e157.attributes['titulo'] != e) __e157.attributes['titulo'] = e; }, false, false);
    __t.addAll([new autogenerated.Text('\n              '),
        __e158,
        new autogenerated.Text('\n            ')]);
    });
    __e160 = _root.nodes[1].nodes[1].nodes[23];
    __t.oneWayBind(() => descricaoShare, (e) { if (__e160.xtag.descricao != e) __e160.xtag.descricao = e; }, false, false);
    __t.bind(() => [Model.endpoint_imagens, membro['socio']],  (__e) { __e160.xtag.imagem = '${__e.newValue[0]}/Fotos/384x418/${__e.newValue[1]}.jpg'; }, false);
    __t.bind(() => [membro['rank'], membro['name']],  (__e) { __e160.xtag.titulo = '${__e.newValue[0]} ${__e.newValue[1]}'; }, false);
    __t.oneWayBind(() => model.hash, (e) { if (__e160.xtag.url != e) __e160.xtag.url = e; }, false, false);
    __t.component(new Share()..host = __e160);
    __t.create();
  }

  void inserted_autogenerated() {
    __t.insert();
  }

  void removed_autogenerated() {
    __t.remove();
    __t = __e139 = __e140 = __e141 = __e142 = __e143 = __e144 = __e147 = __e151 = __e155 = __e159 = __e160 = null;
  }

  void composeChildren() {
    super.composeChildren();
    if (_root is! autogenerated.ShadowRoot) _root = this;
  }

  /** Original code from the component. */

  Map membro;

  String get activoStr{
    return membro['quota']?"No activo":"Inactivo";
  }
  String get activoImg{
    return membro['quota']?"member_active.png":"member_inactive.png";
  }
  String get descricaoShare{
    String emblemasTxt="";
    for(Map a in membro['achievementsGun']){
      emblemasTxt="${emblemasTxt}\n${a['name']}: ${a['stars'].toInt()}/5";
    }
    for(Map a in membro['achievementsRole']){
      emblemasTxt="${emblemasTxt}\n${a['name']}: ${a['stars'].toInt()}/5";
    }
    for(Map a in membro['achievementsSpecial']){
      emblemasTxt="${emblemasTxt}\n${a['name']}: ${a['stars'].toInt()}/5";
    }
    return "Nivel: ${membro['level']}\nPatente: ${membro['rank']}\nEquipe: ${membro['teamName']}\nExperiencia: ${membro['xp']}/${membro['nextLevelXp']}${emblemasTxt}";
  }
  void clickClose(){
    model.changePage("${NavLink.Membros.link}");
  }
}
//@ sourceMappingURL=x-member.dart.map