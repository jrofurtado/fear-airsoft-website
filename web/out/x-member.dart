// Auto-generated from x-member.html.
// DO NOT EDIT.

library x_member;

import 'dart:html' as autogenerated;
import 'dart:svg' as autogenerated_svg;
import 'package:web_ui/web_ui.dart' as autogenerated;
import 'package:web_ui/observe/observable.dart' as __observe;
import 'x-xp.dart';
import 'x-membro-emblema.dart';
import 'x-share.dart';
import 'package:web_ui/web_ui.dart';
import 'dart:html';
import 'model.dart';



class Member extends WebComponent {
  /** Autogenerated from the template. */

  /** CSS class constants. */
  static Map<String, String> _css = {};

  /**
   * Shadow root for this component. We use 'var' to allow simulating shadow DOM
   * on browsers that don't support this feature.
   */
  var _root;
  static final __html1 = new autogenerated.Element.html('<div class="membro-divEmblema">\n                <x-membro-emblema classe="membro-emblema" id="__e-182"></x-membro-emblema>\n                <img class="membro-estrela" id="__e-183">\n              </div>'), __html2 = new autogenerated.Element.html('<div class="membro-divEmblema">\n                <x-membro-emblema classe="membro-emblema" id="__e-186"></x-membro-emblema>\n                <img class="membro-estrela" id="__e-187">\n              </div>'), __html3 = new autogenerated.Element.html('<div class="membro-divEmblema">\n                <x-membro-emblema classe="membro-emblema" id="__e-190"></x-membro-emblema>\n                <img class="membro-estrela" id="__e-191">\n              </div>'), __shadowTemplate = new autogenerated.DocumentFragment.html('''
        <div class="disabled">
        <div class="membro fadeInRightBig animated">
          <a class="closeWindow" id="__e-173">X</a>
          <img class="membro-foto" id="__e-174">
          <img class="membro-memberActive" id="__e-175">
          <img class="membro-patente" id="__e-176">
          <img class="membro-equipa" id="__e-177">
          <x-xp id="__e-178"></x-xp>
          <div class="membro-nome"><p id="__e-181"></p></div>
          <div class="membro-emblemas">
            <template id="__e-185"></template>
          </div>
          <div class="membro-emblemas">
            <template id="__e-189"></template>
          </div>
          <div class="membro-emblemas">
            <template id="__e-193"></template>
          </div>
          <div class="divClearBoth"></div>
          <x-share id="__e-194"></x-share>          
        </div>
        </div>
      ''');
  autogenerated.AnchorElement __e173;
  autogenerated.Element __e185, __e189, __e193;
  autogenerated.ImageElement __e174, __e175, __e176, __e177;
  autogenerated.ParagraphElement __e181;
  autogenerated.Template __t;
  autogenerated.UnknownElement __e178, __e194;

  Member.forElement(e) : super.forElement(e);

  void created_autogenerated() {
    _root = createShadowRoot();
    __t = new autogenerated.Template(_root);
    if (_root is autogenerated.ShadowRoot) _root.applyAuthorStyles = true;
    _root.nodes.add(__shadowTemplate.clone(true));
    __e173 = _root.query('#__e-173');
    __t.listen(__e173.onClick, ($event) { clickClose(); });
    __t.oneWayBind(() => NavLink.Membros.link, (e) { __e173.href = e; }, false, true);
    __e174 = _root.query('#__e-174');
    __t.bind(() => [Model.endpoint_imagens, membro['socio']],  (__e) { __e174.src = autogenerated.sanitizeUri('${__e.newValue[0]}/Fotos/384x418/${__e.newValue[1]}.jpg'); }, false);
    __e175 = _root.query('#__e-175');
    __t.bind(() => activoImg,  (__e) { __e175.src = autogenerated.sanitizeUri('../${__e.newValue}'); }, false);
    __t.oneWayBind(() => activoStr, (e) { __e175.title = e; }, false, false);
    __e176 = _root.query('#__e-176');
    __t.bind(() => membro['level'],  (__e) { __e176.src = autogenerated.sanitizeUri('../patentes/${__e.newValue}.png'); }, false);
    __t.oneWayBind(() => membro['rank'], (e) { __e176.title = e; }, false, false);
    __e177 = _root.query('#__e-177');
    __t.bind(() => [Model.endpoint_imagens, membro['teamName']],  (__e) { __e177.src = autogenerated.sanitizeUri('${__e.newValue[0]}/Equipas/150x150/${__e.newValue[1]}.png'); }, false);
    __t.oneWayBind(() => membro['teamName'], (e) { __e177.title = e; }, false, false);
    __e178 = _root.query('#__e-178');
    __t.oneWayBind(() => membro, (e) { __e178.xtag.membro = e; }, false, false);
    __t.component(new Xp.forElement(__e178));
    __e181 = _root.query('#__e-181');
    var __binding179 = __t.contentBind(() => membro['rank'], false);
    var __binding180 = __t.contentBind(() => membro['name'], false);
    __e181.nodes.addAll([__binding179,
        new autogenerated.Text(' '),
        __binding180]);
    __e185 = _root.query('#__e-185');
    __t.loop(__e185, () => membro['achievementsGun'], (achievement, __t) {
      var __e182, __e183, __e184;
      __e184 = __html1.clone(true);
      __e182 = __e184.query('#__e-182');
      __t.oneWayBind(() => achievement, (e) { __e182.xtag.achievement = e; }, false, false);
      __t.bind(() => null,  (__e) { __e182.xtag.classe = 'membro-emblema'; }, true);
      __t.oneWayBind(() => achievement['name'], (e) { __e182.xtag.titulo = e; }, false, false);
      __t.component(new MembroEmblema.forElement(__e182));
      __e183 = __e184.query('#__e-183');
      __t.bind(() => achievement['stars'].toInt(),  (__e) { __e183.src = autogenerated.sanitizeUri('../estrelas/${__e.newValue}s.png'); }, false);
      __t.oneWayBind(() => achievement['name'], (e) { __e183.attributes['titulo'] = e; }, false, false);
    __t.addAll([new autogenerated.Text('\n              '),
        __e184,
        new autogenerated.Text('\n            ')]);
    });
    __e189 = _root.query('#__e-189');
    __t.loop(__e189, () => membro['achievementsRole'], (achievement, __t) {
      var __e186, __e187, __e188;
      __e188 = __html2.clone(true);
      __e186 = __e188.query('#__e-186');
      __t.oneWayBind(() => achievement, (e) { __e186.xtag.achievement = e; }, false, false);
      __t.bind(() => null,  (__e) { __e186.xtag.classe = 'membro-emblema'; }, true);
      __t.oneWayBind(() => achievement['name'], (e) { __e186.xtag.titulo = e; }, false, false);
      __t.component(new MembroEmblema.forElement(__e186));
      __e187 = __e188.query('#__e-187');
      __t.bind(() => achievement['stars'].toInt(),  (__e) { __e187.src = autogenerated.sanitizeUri('../estrelas/${__e.newValue}s.png'); }, false);
      __t.oneWayBind(() => achievement['name'], (e) { __e187.attributes['titulo'] = e; }, false, false);
    __t.addAll([new autogenerated.Text('\n              '),
        __e188,
        new autogenerated.Text('\n            ')]);
    });
    __e193 = _root.query('#__e-193');
    __t.loop(__e193, () => membro['achievementsSpecial'], (achievement, __t) {
      var __e190, __e191, __e192;
      __e192 = __html3.clone(true);
      __e190 = __e192.query('#__e-190');
      __t.oneWayBind(() => achievement, (e) { __e190.xtag.achievement = e; }, false, false);
      __t.bind(() => null,  (__e) { __e190.xtag.classe = 'membro-emblema'; }, true);
      __t.oneWayBind(() => achievement['name'], (e) { __e190.xtag.titulo = e; }, false, false);
      __t.component(new MembroEmblema.forElement(__e190));
      __e191 = __e192.query('#__e-191');
      __t.bind(() => achievement['stars'].toInt(),  (__e) { __e191.src = autogenerated.sanitizeUri('../estrelas/${__e.newValue}s.png'); }, false);
      __t.oneWayBind(() => achievement['name'], (e) { __e191.attributes['titulo'] = e; }, false, false);
    __t.addAll([new autogenerated.Text('\n              '),
        __e192,
        new autogenerated.Text('\n            ')]);
    });
    __e194 = _root.query('#__e-194');
    __t.oneWayBind(() => descricaoShare, (e) { __e194.xtag.descricao = e; }, false, false);
    __t.bind(() => [Model.endpoint_imagens, membro['socio']],  (__e) { __e194.xtag.imagem = '${__e.newValue[0]}/Fotos/384x418/${__e.newValue[1]}.jpg'; }, false);
    __t.bind(() => [membro['rank'], membro['name']],  (__e) { __e194.xtag.titulo = '${__e.newValue[0]} ${__e.newValue[1]}'; }, false);
    __t.oneWayBind(() => model.hash, (e) { __e194.xtag.url = e; }, false, false);
    __t.component(new Share.forElement(__e194));
    __t.create();
  }

  void inserted_autogenerated() {
    __t.insert();
  }

  void removed_autogenerated() {
    __t.remove();
    __t = __e173 = __e174 = __e175 = __e176 = __e177 = __e178 = __e181 = __e185 = __e189 = __e193 = __e194 = null;
  }

  void composeChildren() {
    super.composeChildren();
    if (_root is! autogenerated.ShadowRoot) _root = this;
  }

  /** Original code from the component. */

  Map membro;

  String get activoStr{
    return membro['quota']?"No activo":"Inactivo";
  }
  String get activoImg{
    return membro['quota']?"member_active.png":"member_inactive.png";
  }
  String get descricaoShare{
    String emblemasTxt="";
    for(Map a in membro['achievementsGun']){
      emblemasTxt="${emblemasTxt}\n${a['name']}: ${a['stars'].toInt()}/5";
    }
    for(Map a in membro['achievementsRole']){
      emblemasTxt="${emblemasTxt}\n${a['name']}: ${a['stars'].toInt()}/5";
    }
    for(Map a in membro['achievementsSpecial']){
      emblemasTxt="${emblemasTxt}\n${a['name']}: ${a['stars'].toInt()}/5";
    }
    return "Nivel: ${membro['level']}\nPatente: ${membro['rank']}\nEquipe: ${membro['teamName']}\nExperiencia: ${membro['xp']}/${membro['nextLevelXp']}${emblemasTxt}";
  }
  void clickClose(){
    model.changePage("${NavLink.Membros.link}");
  }
}
//@ sourceMappingURL=x-member.dart.map