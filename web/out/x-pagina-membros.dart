// Auto-generated from x-pagina-membros.html.
// DO NOT EDIT.

library x_pagina_membros;

import 'dart:html' as autogenerated;
import 'dart:svg' as autogenerated_svg;
import 'package:web_ui/web_ui.dart' as autogenerated;
import 'package:web_ui/web_ui.dart';
import 'dart:html';
import '../model.dart';
import 'x-loading.html.dart';
import 'x-member.dart';
import 'x-member-item.dart';
import 'x-legenda-emblema.dart';



class PaginaMembros extends WebComponent {
  /** Autogenerated from the template. */

  /** CSS class constants. */
  static Map<String, String> _css = {};

  /**
   * Shadow root for this component. We use 'var' to allow simulating shadow DOM
   * on browsers that don't support this feature.
   */
  var _root;
  autogenerated.Element __e61, __e63, __e65, __e67;
  autogenerated.InputElement __e59;
  autogenerated.Template __t;

  PaginaMembros.forElement(e) : super.forElement(e);

  void created_autogenerated() {
    _root = createShadowRoot();
    __t = new autogenerated.Template(_root);
    if (_root is autogenerated.ShadowRoot) _root.applyAuthorStyles = true;
    _root.innerHtml = '''
        <div class="pesquisa">
          <input type="text" placeholder="Pesquisar" id="__e-59">
        </div>
        <div class="divClearBoth"></div>
        <template id="__e-61"></template>
        <template id="__e-63"></template>
        <template id="__e-65"></template>
        <template id="__e-67"></template>
      ''';
    __e59 = _root.query('#__e-59');
    __t.listen(__e59.onInput, ($event) { pesquisa = __e59.value; });
    __t.oneWayBind(() => pesquisa, (e) { __e59.value = e; }, false, false);
    __e61 = _root.query('#__e-61');
    __t.conditional(__e61, () => model.membros.length==0, (__t) {
      var __e60;
      __e60 = new autogenerated.Element.tag('x-loading');
      new Loading.forElement(__e60);
      __t.component(__e60);
    __t.addAll([new autogenerated.Text('\n          '),
        __e60,
        new autogenerated.Text('\n        ')]);
    });

    __e63 = _root.query('#__e-63');
    __t.conditional(__e63, () => membroEscolhido!=null, (__t) {
      var __e62;
      __e62 = new autogenerated.Element.tag('x-member');
      __t.oneWayBind(() => membroEscolhido, (e) { __e62.xtag.membro = e; }, false, false);
      new Member.forElement(__e62);
      __t.component(__e62);
    __t.addAll([new autogenerated.Text('\n          '),
        __e62,
        new autogenerated.Text('\n        ')]);
    });

    __e65 = _root.query('#__e-65');
    __t.loop(__e65, () => resultados, (membro, __t) {
      var __e64;
      __e64 = new autogenerated.Element.tag('x-member-item');
      __t.oneWayBind(() => membro, (e) { __e64.xtag.membro = e; }, false, false);
      new MemberItem.forElement(__e64);
      __t.component(__e64);
    __t.addAll([new autogenerated.Text('\n          '),
        __e64,
        new autogenerated.Text('\n        ')]);
    });
    __e67 = _root.query('#__e-67');
    __t.conditional(__e67, () => model.emblemaSeleccionado!=null, (__t) {
      var __e66;
      __e66 = new autogenerated.Element.tag('x-legenda-emblema');
      __t.oneWayBind(() => model.emblemaSeleccionado, (e) { __e66.xtag.nome = e; }, false, false);
      new LegendaEmblema.forElement(__e66);
      __t.component(__e66);
    __t.addAll([new autogenerated.Text('\n          '),
        __e66,
        new autogenerated.Text('\n        ')]);
    });

    __t.create();
  }

  void inserted_autogenerated() {
    __t.insert();
  }

  void removed_autogenerated() {
    __t.remove();
    __t = __e59 = __e61 = __e63 = __e65 = __e67 = null;
  }

  void composeChildren() {
    super.composeChildren();
    if (_root is! autogenerated.ShadowRoot) _root = this;
  }

  /** Original code from the component. */

  String pesquisa="";
  List<Map> get resultados{
    String lpesquisa = pesquisa.toLowerCase();
    var res = model.membros.where((member) => member["name"].toLowerCase().contains(lpesquisa));
    return res.toList();
  }
  Map get membroEscolhido{
    List<String> params = model.hash.split("/");
    if(params.length>=3){
      var res = model.membros.where((member) => member["socio"].toString() == params.elementAt(2));
      if(res.isEmpty)
        return null;
      return res.first;
    }
    return null;
  }
}
//@ sourceMappingURL=x-pagina-membros.dart.map