// Auto-generated from x-xp.html.
// DO NOT EDIT.

library x_xp;

import 'dart:html' as autogenerated;
import 'dart:svg' as autogenerated_svg;
import 'package:web_ui/web_ui.dart' as autogenerated;
import 'package:web_ui/web_ui.dart';
import 'dart:html';
import '../model.dart';



class Xp extends WebComponent {
  /** Autogenerated from the template. */

  /** CSS class constants. */
  static Map<String, String> _css = {};

  /**
   * Shadow root for this component. We use 'var' to allow simulating shadow DOM
   * on browsers that don't support this feature.
   */
  var _root;
  static final __shadowTemplate = new autogenerated.DocumentFragment.html('''
        <div class="xp-container">
          <div class="xp-number"><p id="__e-188"></p></div>
          <div class="xp-bar-left"></div>
          <div class="xp-bar">
            <div style="width:{{larguraXp}}%;" class="xp" id="__e-189"></div>
          </div>
          <div class="xp-bar-right"></div>
          <div class="xp-number"><p id="__e-191"></p></div>
        </div>
      ''');
  autogenerated.DivElement __e189;
  autogenerated.ParagraphElement __e188, __e191;
  autogenerated.Template __t;

  Xp.forElement(e) : super.forElement(e);

  void created_autogenerated() {
    _root = createShadowRoot();
    __t = new autogenerated.Template(_root);
    if (_root is autogenerated.ShadowRoot) _root.applyAuthorStyles = true;
    _root.nodes.add(__shadowTemplate.clone(true));
    __e188 = _root.query('#__e-188');
    var __binding187 = __t.contentBind(() => membro['previousLevelXp'], false);
    __e188.nodes.add(__binding187);
    __e189 = _root.query('#__e-189');
    __t.bind(() => larguraXp,  (__e) { __e189.attributes['style'] = 'width:${__e.newValue}%;'; }, false);
    __e191 = _root.query('#__e-191');
    var __binding190 = __t.contentBind(() => membro['nextLevelXp'], false);
    __e191.nodes.add(__binding190);
    __t.create();
  }

  void inserted_autogenerated() {
    __t.insert();
  }

  void removed_autogenerated() {
    __t.remove();
    __t = __e188 = __e189 = __e191 = null;
  }

  void composeChildren() {
    super.composeChildren();
    if (_root is! autogenerated.ShadowRoot) _root = this;
  }

  /** Original code from the component. */

  Map membro;
  
  int get larguraXp{
    double amplitudeTotal = (membro["nextLevelXp"] - membro["previousLevelXp"]).toDouble();
    double amplitudeXp = (membro["xp"]-membro["previousLevelXp"]).toDouble();
    return (100*amplitudeXp/amplitudeTotal).toInt();
  }
  int get larguraRestanteXp{
    return 100-larguraXp;
  }
}

//@ sourceMappingURL=x-xp.dart.map