// Auto-generated from x-legenda-emblema.html.
// DO NOT EDIT.

library x_legenda_emblema;

import 'dart:html' as autogenerated;
import 'dart:svg' as autogenerated_svg;
import 'package:web_ui/web_ui.dart' as autogenerated;
import 'package:web_ui/observe/observable.dart' as __observe;
import 'x-loading.html.dart';
import 'package:web_ui/web_ui.dart';
import 'dart:html';
import 'model.dart';



class LegendaEmblema extends WebComponent {
  /** Autogenerated from the template. */

  /** CSS class constants. */
  static Map<String, String> _css = {};

  /**
   * Shadow root for this component. We use 'var' to allow simulating shadow DOM
   * on browsers that don't support this feature.
   */
  var _root;
  static final __html1 = new autogenerated.Element.html('<div is="x-loading"></div>'), __html10 = new autogenerated.Element.html('<strong>Descrição:</strong>'), __html2 = new autogenerated.Element.html('<div><img class="membro-emblema"></div>'), __html3 = new autogenerated.DivElement(), __html4 = new autogenerated.Element.html('<strong>Nome:</strong>'), __html5 = new autogenerated.DivElement(), __html6 = new autogenerated.Element.html('<strong>Tipo:</strong>'), __html7 = new autogenerated.DivElement(), __html8 = new autogenerated.Element.html('<strong>Custo por estela:</strong>'), __html9 = new autogenerated.DivElement(), __shadowTemplate = new autogenerated.DocumentFragment.html('''
        <div class="disabled">
        <div class="legenda fadeInRightBig animated">
          <a class="closeWindow">X</a>          
          <template></template>
          <template></template>
          <div class="divClearBoth"></div>
        </div>
        </div>
      ''');
  autogenerated.AnchorElement __e170;
  autogenerated.Element __e172, __e183;
  autogenerated.Template __t;

  void created_autogenerated() {
    _root = createShadowRoot();
    __t = new autogenerated.Template(_root);
    if (_root is autogenerated.ShadowRoot) _root.applyAuthorStyles = true;
    _root.nodes.add(__shadowTemplate.clone(true));
    __e170 = _root.nodes[1].nodes[1].nodes[1];
    __t.listen(__e170.onClick, ($event) { clickClose(); });
    __t.oneWayBind(() => model.href, (e) { if (__e170.href != e) __e170.href = e; }, false, true);
    __e172 = _root.nodes[1].nodes[1].nodes[3];
    __t.conditional(__e172, () => emblema==null, (__t) {
      var __e171;
      __e171 = __html1.clone(true);
      __t.component(new XLoading()..host = __e171);
    __t.addAll([new autogenerated.Text('\n            '),
        __e171,
        new autogenerated.Text('\n          ')]);
    });

    __e183 = _root.nodes[1].nodes[1].nodes[5];
    __t.conditional(__e183, () => emblema!=null, (__t) {
      var __e173, __e174, __e176, __e178, __e180, __e182;
      __e174 = __html2.clone(true);
      __e173 = __e174.nodes[0];
      __t.bind(() => emblema['imageName'],  (__e) { __e173.src = autogenerated.sanitizeUri('../emblemas/${__e.newValue}.png'); }, false);
      __t.oneWayBind(() => emblema['nome'], (e) { if (__e173.attributes['titulo'] != e) __e173.attributes['titulo'] = e; }, false, false);
      __e176 = __html3.clone(true);
      var __binding175 = __t.contentBind(() => emblema['nome'], false);
      __e176.nodes.addAll([__html4.clone(true),
          new autogenerated.Text(' '),
          __binding175]);
      __e178 = __html5.clone(true);
      var __binding177 = __t.contentBind(() => emblema['tipo'], false);
      __e178.nodes.addAll([__html6.clone(true),
          new autogenerated.Text(' '),
          __binding177]);
      __e180 = __html7.clone(true);
      var __binding179 = __t.contentBind(() => emblema['custoEstrela'], false);
      __e180.nodes.addAll([__html8.clone(true),
          new autogenerated.Text(' '),
          __binding179]);
      __e182 = __html9.clone(true);
      var __binding181 = __t.contentBind(() => emblema['descricao'], false);
      __e182.nodes.addAll([__html10.clone(true),
          new autogenerated.Text(' '),
          __binding181]);
    __t.addAll([new autogenerated.Text('\n            '),
        __e174,
        new autogenerated.Text('\n            '),
        __e176,
        new autogenerated.Text('\n            '),
        __e178,
        new autogenerated.Text('\n            '),
        __e180,
        new autogenerated.Text('\n            '),
        __e182,
        new autogenerated.Text('\n          ')]);
    });

    __t.create();
  }

  void inserted_autogenerated() {
    __t.insert();
  }

  void removed_autogenerated() {
    __t.remove();
    __t = __e170 = __e172 = __e183 = null;
  }

  void composeChildren() {
    super.composeChildren();
    if (_root is! autogenerated.ShadowRoot) _root = this;
  }

  /** Original code from the component. */

  String nome;
  Map get emblema{
    if(nome!=null){
      var res = model.emblemas['emblemas'].where((emblema) => emblema["nome"] == nome);
      if(res.isEmpty) {
        return null;
      }
      return res.first;
    }
    return null;
  }
  void clickClose(){
    model.emblemaSeleccionado = null;
  }
}
//@ sourceMappingURL=x-legenda-emblema.dart.map